==== RECURSION ====
1. smallest number in an array  [O(n)]

function smallest(arr,index=0){
    if(index===arr.length-1) return arr[index];
    let result = smallest(arr,index+1);
    return arr[index]<result?arr[index]:result;
}

console.log(smallest([4,6,1,3,8]));



========================

2. Sum of digits  [O(d)] d-> number of digits

function sumOfDigits(num){
    if(num===0) return 0;
    return (num%10)+sumOfDigits(Math.floor(num/10));
}

console.log(sumOfDigits(422));



=========================

3. Palindrome string [O(n)]

function palindrome(str,first=0,last=str.length-1){
    if(first>=last) return true;
    if(str[first] !== str[last]) return false;
    return palindrome(str,first+1,last-1);
}

console.log(palindrome("malayalam"));
console.log(palindrome("hello"));



==========================

4. gcd  [O(log(min(a,b)))]

function gcd(a,b){
    if(b===0) return a;
    return gcd(b,a%b);
}

console.log(gcd(15,50));


===========================


5. Reverse string  [O(n)]

function reverse(str,index=str.length-1){
    if(index===0) return str[index];
    return str[index]+reverse(str,index-1);
}

let str="hello";
console.log(reverse(str));



===========================


6. Reverse number  [O(n^2)]

function reverseNumber(num){
    if(num < 10) return num;
    
    let lastDigit = num % 10;
    let remaining = Math.floor(num/10);
    
    let digits = countDigits(remaining);
    
    return lastDigit * Math.pow(10,digits)+reverseNumber(remaining);
    
}

function countDigits(num){
    if(num===0) return 0;
    return 1 + countDigits(Math.floor(num/10));
}

console.log(reverseNumber(1234));



===============================

























